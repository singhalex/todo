(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,'html {\n  box-sizing: border-box;\n  font-size: 16px;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  font-weight: normal;\n}\n\nbody {\n  width: 100%;\n  height: 100vh;\n  display: grid;\n  grid-template-columns: 250px 1fr;\n  grid-template-rows: 100px 1fr;\n}\n\n#title {\n  grid-area: 1 / 1 / 2 / 3;\n  background-color: lightblue;\n  box-shadow: 0px 6px 6px 0px rgba(0, 0, 0, 0.6);\n  -webkit-box-shadow: 0px 6px 6px 0px rgba(0, 0, 0, 0.6);\n  -moz-box-shadow: 0px 6px 6px 0px rgba(0, 0, 0, 0.6);\n  z-index: 100;\n}\n\n#title > p {\n  font-family: "Dela Gothic One", cursive;\n  color: white;\n  text-shadow: 2px 2px #464545;\n  font-size: 4.5rem;\n  vertical-align: top;\n  padding-left: 2rem;\n}\n\n#side-bar {\n  grid-area: 2 / 1 / 3 / 2;\n  background-color: lightcoral;\n  box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.6);\n  -webkit-box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.6);\n  -moz-box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.6);\n  z-index: 50;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem;\n  gap: 1rem;\n}\n\n#project-container {\n  width: 100%;\n}\n\n.project-card {\n  width: 100%;\n  padding: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n}\n\n.project-card:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n}\n\n#content-area {\n  grid-area: 2 / 2 / 3 / 3;\n  background-color: lightgreen;\n}\n\n#new-task-form {\n  margin: 2rem;\n}\n\n.card {\n  box-sizing: border-box;\n  margin: 4rem;\n  padding: 2rem;\n  width: 300px;\n  height: 300px;\n  background-color: rgb(255, 255, 17);\n  box-shadow: 6px 6px 6px 0px rgba(0, 0, 0, 0.6);\n  -webkit-box-shadow: 6px 6px 6px 0px rgba(0, 0, 0, 0.6);\n  -moz-box-shadow: 6px 6px 6px 0px rgba(0, 0, 0, 0.6);\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,eAAe;AACjB;;AAEA;EACE,SAAS;EACT,UAAU;EACV,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,aAAa;EACb,gCAAgC;EAChC,6BAA6B;AAC/B;;AAEA;EACE,wBAAwB;EACxB,2BAA2B;EAC3B,8CAA8C;EAC9C,sDAAsD;EACtD,mDAAmD;EACnD,YAAY;AACd;;AAEA;EACE,uCAAuC;EACvC,YAAY;EACZ,4BAA4B;EAC5B,iBAAiB;EACjB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;EACxB,4BAA4B;EAC5B,8CAA8C;EAC9C,sDAAsD;EACtD,mDAAmD;EACnD,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,aAAa;EACb,SAAS;AACX;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;EACX,eAAe;EACf,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,oCAAoC;EACpC,eAAe;AACjB;;AAEA;EACE,wBAAwB;EACxB,4BAA4B;AAC9B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,aAAa;EACb,mCAAmC;EACnC,8CAA8C;EAC9C,sDAAsD;EACtD,mDAAmD;AACrD",sourcesContent:['html {\n  box-sizing: border-box;\n  font-size: 16px;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  font-weight: normal;\n}\n\nbody {\n  width: 100%;\n  height: 100vh;\n  display: grid;\n  grid-template-columns: 250px 1fr;\n  grid-template-rows: 100px 1fr;\n}\n\n#title {\n  grid-area: 1 / 1 / 2 / 3;\n  background-color: lightblue;\n  box-shadow: 0px 6px 6px 0px rgba(0, 0, 0, 0.6);\n  -webkit-box-shadow: 0px 6px 6px 0px rgba(0, 0, 0, 0.6);\n  -moz-box-shadow: 0px 6px 6px 0px rgba(0, 0, 0, 0.6);\n  z-index: 100;\n}\n\n#title > p {\n  font-family: "Dela Gothic One", cursive;\n  color: white;\n  text-shadow: 2px 2px #464545;\n  font-size: 4.5rem;\n  vertical-align: top;\n  padding-left: 2rem;\n}\n\n#side-bar {\n  grid-area: 2 / 1 / 3 / 2;\n  background-color: lightcoral;\n  box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.6);\n  -webkit-box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.6);\n  -moz-box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.6);\n  z-index: 50;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem;\n  gap: 1rem;\n}\n\n#project-container {\n  width: 100%;\n}\n\n.project-card {\n  width: 100%;\n  padding: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n}\n\n.project-card:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n}\n\n#content-area {\n  grid-area: 2 / 2 / 3 / 3;\n  background-color: lightgreen;\n}\n\n#new-task-form {\n  margin: 2rem;\n}\n\n.card {\n  box-sizing: border-box;\n  margin: 4rem;\n  padding: 2rem;\n  width: 300px;\n  height: 300px;\n  background-color: rgb(255, 255, 17);\n  box-shadow: 6px 6px 6px 0px rgba(0, 0, 0, 0.6);\n  -webkit-box-shadow: 6px 6px 6px 0px rgba(0, 0, 0, 0.6);\n  -moz-box-shadow: 6px 6px 6px 0px rgba(0, 0, 0, 0.6);\n}\n'],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var p=[].concat(e[d]);r&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),n.push(p))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],p=a[d]||0,A="".concat(d," ").concat(p);a[d]=p+1;var l=t(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)n[l].references++,n[l].updater(u);else{var x=o(u,r);r.byIndex=c,n.splice(c,0,{identifier:A,updater:x,references:1})}i.push(A)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var s=r(e,o),d=0;d<a.length;d++){var p=t(a[d]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),s=t.n(c),d=t(216),p=t.n(d),A=t(589),l=t.n(A),u=t(426),x={};x.styleTagTransform=l(),x.setAttributes=s(),x.insert=i().bind(null,"head"),x.domAPI=o(),x.insertStyleElement=p(),n()(u.Z,x),u.Z&&u.Z.locals&&u.Z.locals;const g=[],m={getList:()=>g,addToList:e=>{g.push(e)},deleteProject:e=>{g.splice(e,1)},getSpecificProject:e=>g[e]},b=m,f=document.querySelector("#content-area");function C(){f.innerHTML=""}function h(e){C(),b.getList()[e].getTaskList().forEach((e=>{const n=document.createElement("div");n.setAttribute("class","card"),n.innerText=e.getTitle(),f.appendChild(n)}))}const E=document.querySelector("#project-container"),v=()=>{E.innerHTML="";let e=0;b.getList().forEach((n=>{const t=document.createElement("div");t.setAttribute("class","project-card"),t.dataset.index=e,t.innerText=n.getTitle(),t.addEventListener("click",(()=>{h(t.dataset.index),b.getList().forEach((e=>{e.setDisplayed(!1)})),n.setDisplayed(!0)}));const r=document.createElement("button");r.innerText="X",t.appendChild(r),r.addEventListener("click",(e=>{e.stopPropagation(),!0===b.getList()[t.dataset.index].getDisplayed()&&C(),b.deleteProject(t.dataset.index),v()})),E.appendChild(t),e+=1}))},w={buildSideBar:v,addTask:()=>{let e=0;b.getList().forEach((n=>{if(!0===n.getDisplayed()){const i=(t=document.querySelector("#task-input").value,r="test",o="more test",a=!1,{getTitle:()=>t,getDescription:()=>r,getDueDate:()=>o,getPriority:()=>a});n.addTask(i),h(e),document.querySelector("#task-input").value=""}var t,r,o,a;e+=1}))},createNewProjectPrompt:function e(){const n=document.querySelector("#create-project-prompt");n.innerHTML='<button id="test1">+ New Project</button>',document.querySelector("#test1").addEventListener("click",(t=>{t.preventDefault(),n.innerHTML='<input type="text" id="project-name" /><br><button id="add">Add</button><button id="cancel">Cancel</button>';const r=document.querySelector("#add"),o=document.querySelector("#project-name");r.addEventListener("click",(()=>{t.preventDefault();const n=(e=>{const n=[];let t=!1;return{getTitle:()=>e,addTask:e=>{n.push(e)},getTaskList:()=>n,setDisplayed:e=>{t=e},getDisplayed:()=>t}})(o.value);b.addToList(n),v(),e()})),document.querySelector("#cancel").addEventListener("click",(()=>{t.preventDefault(),e()}))}))}},y=w;document.querySelector("#add-task-button").addEventListener("click",(e=>{e.preventDefault(),y.addTask()})),y.createNewProjectPrompt()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,